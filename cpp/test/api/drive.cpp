// Copyright (c), CommunityLogiq Software
// 
// THIS FILE IS AUTOGENERATED, DO NOT EDIT

#include "ulsdk/api/drive.h"

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-parameter"
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-parameter"
#endif
#include <arrow/record_batch.h>
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif

#include "test.h"

namespace drive {

ul::Result<ul::Void>
test_ls(ul::RequestContext &ctx) {
    ::ul::api::drive::ls(
        ctx,
        std::string(),
        std::string()
    );
    return ul::Void();
}

ApiTest test_ls_obj(test_ls, "drive::ls", &link_only_api_test_root);

ul::Result<ul::Void>
test_create_entry(ul::RequestContext &ctx) {
    ::ul::api::drive::create_entry(
        ctx,
        std::string(),
        std::string(),
        std::string(),
        std::string(),
        0
    );
    return ul::Void();
}

ApiTest test_create_entry_obj(test_create_entry, "drive::create_entry", &link_only_api_test_root);

ul::Result<ul::Void>
test_get_roots(ul::RequestContext &ctx) {
    ::ul::api::drive::get_roots(
        ctx
    );
    return ul::Void();
}

ApiTest test_get_roots_obj(test_get_roots, "drive::get_roots", &link_only_api_test_root);

ul::Result<ul::Void>
test_post_file(ul::RequestContext &ctx) {
    ::ul::api::drive::post_file(
        ctx,
        std::string(),
        false,
        std::vector<ul::File>()
    );
    return ul::Void();
}

ApiTest test_post_file_obj(test_post_file, "drive::post_file", &link_only_api_test_root);

ul::Result<ul::Void>
test_unlink(ul::RequestContext &ctx) {
    ::ul::api::drive::unlink(
        ctx,
        std::string()
    );
    return ul::Void();
}

ApiTest test_unlink_obj(test_unlink, "drive::unlink", &link_only_api_test_root);

ul::Result<ul::Void>
test_move(ul::RequestContext &ctx) {
    ::ul::api::drive::move(
        ctx,
        ::ul::types::MoveRequest()
    );
    return ul::Void();
}

ApiTest test_move_obj(test_move, "drive::move", &link_only_api_test_root);

ul::Result<ul::Void>
test_copy(ul::RequestContext &ctx) {
    ::ul::api::drive::copy(
        ctx,
        ::ul::types::MoveRequest()
    );
    return ul::Void();
}

ApiTest test_copy_obj(test_copy, "drive::copy", &link_only_api_test_root);

ul::Result<ul::Void>
test_get_file(ul::RequestContext &ctx) {
    ::ul::api::drive::get_file(
        ctx,
        std::string()
    );
    return ul::Void();
}

ApiTest test_get_file_obj(test_get_file, "drive::get_file", &link_only_api_test_root);

ul::Result<ul::Void>
test_put_file_chunk(ul::RequestContext &ctx) {
    ::ul::api::drive::put_file_chunk(
        ctx,
        std::string(),
        0,
        std::string(),
        std::vector<uint8_t>()
    );
    return ul::Void();
}

ApiTest test_put_file_chunk_obj(test_put_file_chunk, "drive::put_file_chunk", &link_only_api_test_root);

ul::Result<ul::Void>
test_get_root_id(ul::RequestContext &ctx) {
    ::ul::api::drive::get_root_id(
        ctx,
        std::string()
    );
    return ul::Void();
}

ApiTest test_get_root_id_obj(test_get_root_id, "drive::get_root_id", &link_only_api_test_root);

} // namespace drive
