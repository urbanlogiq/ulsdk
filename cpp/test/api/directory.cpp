// Copyright (c), CommunityLogiq Software
// 
// THIS FILE IS AUTOGENERATED, DO NOT EDIT

#include "ulsdk/api/directory.h"

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-parameter"
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-parameter"
#endif
#include <arrow/record_batch.h>
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif

#include "test.h"

namespace directory {

ul::Result<ul::Void>
test_get_principal(ul::RequestContext &ctx) {
    ::ul::api::directory::get_principal(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000")
    );
    return ul::Void();
}

ApiTest test_get_principal_obj(test_get_principal, "directory::get_principal", &link_only_api_test_root);

ul::Result<ul::Void>
test_get_principals(ul::RequestContext &ctx) {
    ::ul::api::directory::get_principals(
        ctx,
        std::string()
    );
    return ul::Void();
}

ApiTest test_get_principals_obj(test_get_principals, "directory::get_principals", &link_only_api_test_root);

ul::Result<ul::Void>
test_query_principals(ul::RequestContext &ctx) {
    ::ul::api::directory::query_principals(
        ctx,
        std::string()
    );
    return ul::Void();
}

ApiTest test_query_principals_obj(test_query_principals, "directory::query_principals", &link_only_api_test_root);

ul::Result<ul::Void>
test_get_users(ul::RequestContext &ctx) {
    ::ul::api::directory::get_users(
        ctx
    );
    return ul::Void();
}

ApiTest test_get_users_obj(test_get_users, "directory::get_users", &link_only_api_test_root);

ul::Result<ul::Void>
test_get_users_display_names(ul::RequestContext &ctx) {
    ::ul::api::directory::get_users_display_names(
        ctx
    );
    return ul::Void();
}

ApiTest test_get_users_display_names_obj(test_get_users_display_names, "directory::get_users_display_names", &link_only_api_test_root);

ul::Result<ul::Void>
test_get_current_user(ul::RequestContext &ctx) {
    ::ul::api::directory::get_current_user(
        ctx,
        std::nullopt
    );
    return ul::Void();
}

ApiTest test_get_current_user_obj(test_get_current_user, "directory::get_current_user", &link_only_api_test_root);

ul::Result<ul::Void>
test_create_user(ul::RequestContext &ctx) {
    ::ul::api::directory::create_user(
        ctx
    );
    return ul::Void();
}

ApiTest test_create_user_obj(test_create_user, "directory::create_user", &link_only_api_test_root);

ul::Result<ul::Void>
test_update_current_user(ul::RequestContext &ctx) {
    ::ul::api::directory::update_current_user(
        ctx,
        ::ul::api::directory::UpdateCurrentUser()
    );
    return ul::Void();
}

ApiTest test_update_current_user_obj(test_update_current_user, "directory::update_current_user", &link_only_api_test_root);

ul::Result<ul::Void>
test_get_user(ul::RequestContext &ctx) {
    ::ul::api::directory::get_user(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        std::nullopt
    );
    return ul::Void();
}

ApiTest test_get_user_obj(test_get_user, "directory::get_user", &link_only_api_test_root);

ul::Result<ul::Void>
test_update_user(ul::RequestContext &ctx) {
    ::ul::api::directory::update_user(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ::ul::api::directory::UpdateUser()
    );
    return ul::Void();
}

ApiTest test_update_user_obj(test_update_user, "directory::update_user", &link_only_api_test_root);

ul::Result<ul::Void>
test_delete_user(ul::RequestContext &ctx) {
    ::ul::api::directory::delete_user(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000")
    );
    return ul::Void();
}

ApiTest test_delete_user_obj(test_delete_user, "directory::delete_user", &link_only_api_test_root);

ul::Result<ul::Void>
test_get_groups(ul::RequestContext &ctx) {
    ::ul::api::directory::get_groups(
        ctx
    );
    return ul::Void();
}

ApiTest test_get_groups_obj(test_get_groups, "directory::get_groups", &link_only_api_test_root);

ul::Result<ul::Void>
test_create_group(ul::RequestContext &ctx) {
    ::ul::api::directory::create_group(
        ctx,
        ::ul::api::directory::CreateGroup()
    );
    return ul::Void();
}

ApiTest test_create_group_obj(test_create_group, "directory::create_group", &link_only_api_test_root);

ul::Result<ul::Void>
test_get_group_members(ul::RequestContext &ctx) {
    ::ul::api::directory::get_group_members(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000")
    );
    return ul::Void();
}

ApiTest test_get_group_members_obj(test_get_group_members, "directory::get_group_members", &link_only_api_test_root);

ul::Result<ul::Void>
test_delete_group(ul::RequestContext &ctx) {
    ::ul::api::directory::delete_group(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000")
    );
    return ul::Void();
}

ApiTest test_delete_group_obj(test_delete_group, "directory::delete_group", &link_only_api_test_root);

ul::Result<ul::Void>
test_add_group_member(ul::RequestContext &ctx) {
    ::ul::api::directory::add_group_member(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ul::Uuid("00000000-0000-0000-0000-000000000000")
    );
    return ul::Void();
}

ApiTest test_add_group_member_obj(test_add_group_member, "directory::add_group_member", &link_only_api_test_root);

ul::Result<ul::Void>
test_remove_group_member(ul::RequestContext &ctx) {
    ::ul::api::directory::remove_group_member(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ul::Uuid("00000000-0000-0000-0000-000000000000")
    );
    return ul::Void();
}

ApiTest test_remove_group_member_obj(test_remove_group_member, "directory::remove_group_member", &link_only_api_test_root);

} // namespace directory
