// Copyright (c), CommunityLogiq Software
// 
// THIS FILE IS AUTOGENERATED, DO NOT EDIT

#include "ulsdk/api/acl.h"

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-parameter"
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-parameter"
#endif
#include <arrow/record_batch.h>
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif

#include "test.h"

namespace acl {

ul::Result<ul::Void>
test_new_acl(ul::RequestContext &ctx) {
    ::ul::api::acl::new_acl(
        ctx
    );
    return ul::Void();
}

ApiTest test_new_acl_obj(test_new_acl, "acl::new_acl", &link_only_api_test_root);

ul::Result<ul::Void>
test_new_from(ul::RequestContext &ctx) {
    ::ul::api::acl::new_from(
        ctx,
        std::nullopt
    );
    return ul::Void();
}

ApiTest test_new_from_obj(test_new_from, "acl::new_from", &link_only_api_test_root);

ul::Result<ul::Void>
test_request(ul::RequestContext &ctx) {
    ::ul::api::acl::request(
        ctx,
        ::ul::types::AccessRequest()
    );
    return ul::Void();
}

ApiTest test_request_obj(test_request, "acl::request", &link_only_api_test_root);

ul::Result<ul::Void>
test_share(ul::RequestContext &ctx) {
    ::ul::api::acl::share(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        0
    );
    return ul::Void();
}

ApiTest test_share_obj(test_share, "acl::share", &link_only_api_test_root);

ul::Result<ul::Void>
test_share_with_details(ul::RequestContext &ctx) {
    ::ul::api::acl::share_with_details(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        0,
        ::ul::types::ShareDetails()
    );
    return ul::Void();
}

ApiTest test_share_with_details_obj(test_share_with_details, "acl::share_with_details", &link_only_api_test_root);

ul::Result<ul::Void>
test_share_all(ul::RequestContext &ctx) {
    ::ul::api::acl::share_all(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ul::Uuid("00000000-0000-0000-0000-000000000000")
    );
    return ul::Void();
}

ApiTest test_share_all_obj(test_share_all, "acl::share_all", &link_only_api_test_root);

ul::Result<ul::Void>
test_share_all_with_details(ul::RequestContext &ctx) {
    ::ul::api::acl::share_all_with_details(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ::ul::types::ShareDetails()
    );
    return ul::Void();
}

ApiTest test_share_all_with_details_obj(test_share_all_with_details, "acl::share_all_with_details", &link_only_api_test_root);

ul::Result<ul::Void>
test_grant(ul::RequestContext &ctx) {
    ::ul::api::acl::grant(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        0
    );
    return ul::Void();
}

ApiTest test_grant_obj(test_grant, "acl::grant", &link_only_api_test_root);

ul::Result<ul::Void>
test_grant_with_details(ul::RequestContext &ctx) {
    ::ul::api::acl::grant_with_details(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        0,
        ::ul::types::ShareDetails()
    );
    return ul::Void();
}

ApiTest test_grant_with_details_obj(test_grant_with_details, "acl::grant_with_details", &link_only_api_test_root);

ul::Result<ul::Void>
test_grant_all(ul::RequestContext &ctx) {
    ::ul::api::acl::grant_all(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ul::Uuid("00000000-0000-0000-0000-000000000000")
    );
    return ul::Void();
}

ApiTest test_grant_all_obj(test_grant_all, "acl::grant_all", &link_only_api_test_root);

ul::Result<ul::Void>
test_grant_all_with_details(ul::RequestContext &ctx) {
    ::ul::api::acl::grant_all_with_details(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ::ul::types::ShareDetails()
    );
    return ul::Void();
}

ApiTest test_grant_all_with_details_obj(test_grant_all_with_details, "acl::grant_all_with_details", &link_only_api_test_root);

ul::Result<ul::Void>
test_revoke(ul::RequestContext &ctx) {
    ::ul::api::acl::revoke(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ul::Uuid("00000000-0000-0000-0000-000000000000")
    );
    return ul::Void();
}

ApiTest test_revoke_obj(test_revoke, "acl::revoke", &link_only_api_test_root);

ul::Result<ul::Void>
test_get_permissions(ul::RequestContext &ctx) {
    ::ul::api::acl::get_permissions(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000")
    );
    return ul::Void();
}

ApiTest test_get_permissions_obj(test_get_permissions, "acl::get_permissions", &link_only_api_test_root);

ul::Result<ul::Void>
test_set(ul::RequestContext &ctx) {
    ::ul::api::acl::set(
        ctx,
        ul::Uuid("00000000-0000-0000-0000-000000000000"),
        ul::Uuid("00000000-0000-0000-0000-000000000000")
    );
    return ul::Void();
}

ApiTest test_set_obj(test_set, "acl::set", &link_only_api_test_root);

} // namespace acl
