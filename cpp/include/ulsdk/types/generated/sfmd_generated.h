// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_SFMD_H_
#define FLATBUFFERS_GENERATED_SFMD_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 23 &&
              FLATBUFFERS_VERSION_MINOR == 5 &&
              FLATBUFFERS_VERSION_REVISION == 26,
             "Non-compatible flatbuffers version included");

enum class HouseholdType : uint32_t {
  CHILDREN_NOT_GOING_TO_SCHOOL = 1,
  YOUNG_ADULTS_AND_STUDENTS = 2,
  YOUNG_CHILDREN_UNDER_4_YEARS_OLD = 4,
  MEMBERS_THAT_HAVE_LIMITED_ENGLISH_PROFICIENCY = 8,
  SINGLE_PARENT = 16,
  CHILDREN_ABOVE_THE_AGE_OF_4 = 32,
  AT_LEAST_3_MEMBERS = 64,
  SMOKING_MEMBERS = 128,
  LIMITED_EDUCATION_ATTAINMENT = 256,
  OLDER_ADULTS_OVER_70_YEARS_OLD = 512,
  A_HISTORY_OF_MENTAL_HEALTH_ISSUES = 1024,
  DISABLED_MEMBERS = 2048,
  HIGH_EDUCATION_ATTAINMENT = 4096,
  MEMBERS_WITH_FIRE_INVOLVING_OCCUPATIONS_FOOD_PREPARATION_CONSTRUCTION_EXTRACTION_FARMING_FISHING_FORESTRY = 8192,
  BINGE_DRINKING_HABITS = 16384,
  MEMBERS_WITH_SLEEP_DEPRIVATION_PRONE_OCCUPATIONS_TRANSPORTATION_HEALTH_CARE_MANUFACTURING_SAFETY_BUSINESS_MANAGEMENT = 32768,
  TWO_MEMBERS_OR_LESS = 65536,
  NONE = 0,
  ANY = 131071
};
FLATBUFFERS_DEFINE_BITMASK_OPERATORS(HouseholdType, uint32_t)

inline const HouseholdType (&EnumValuesHouseholdType())[17] {
  static const HouseholdType values[] = {
    HouseholdType::CHILDREN_NOT_GOING_TO_SCHOOL,
    HouseholdType::YOUNG_ADULTS_AND_STUDENTS,
    HouseholdType::YOUNG_CHILDREN_UNDER_4_YEARS_OLD,
    HouseholdType::MEMBERS_THAT_HAVE_LIMITED_ENGLISH_PROFICIENCY,
    HouseholdType::SINGLE_PARENT,
    HouseholdType::CHILDREN_ABOVE_THE_AGE_OF_4,
    HouseholdType::AT_LEAST_3_MEMBERS,
    HouseholdType::SMOKING_MEMBERS,
    HouseholdType::LIMITED_EDUCATION_ATTAINMENT,
    HouseholdType::OLDER_ADULTS_OVER_70_YEARS_OLD,
    HouseholdType::A_HISTORY_OF_MENTAL_HEALTH_ISSUES,
    HouseholdType::DISABLED_MEMBERS,
    HouseholdType::HIGH_EDUCATION_ATTAINMENT,
    HouseholdType::MEMBERS_WITH_FIRE_INVOLVING_OCCUPATIONS_FOOD_PREPARATION_CONSTRUCTION_EXTRACTION_FARMING_FISHING_FORESTRY,
    HouseholdType::BINGE_DRINKING_HABITS,
    HouseholdType::MEMBERS_WITH_SLEEP_DEPRIVATION_PRONE_OCCUPATIONS_TRANSPORTATION_HEALTH_CARE_MANUFACTURING_SAFETY_BUSINESS_MANAGEMENT,
    HouseholdType::TWO_MEMBERS_OR_LESS
  };
  return values;
}

inline const char *EnumNameHouseholdType(HouseholdType e) {
  switch (e) {
    case HouseholdType::CHILDREN_NOT_GOING_TO_SCHOOL: return "CHILDREN_NOT_GOING_TO_SCHOOL";
    case HouseholdType::YOUNG_ADULTS_AND_STUDENTS: return "YOUNG_ADULTS_AND_STUDENTS";
    case HouseholdType::YOUNG_CHILDREN_UNDER_4_YEARS_OLD: return "YOUNG_CHILDREN_UNDER_4_YEARS_OLD";
    case HouseholdType::MEMBERS_THAT_HAVE_LIMITED_ENGLISH_PROFICIENCY: return "MEMBERS_THAT_HAVE_LIMITED_ENGLISH_PROFICIENCY";
    case HouseholdType::SINGLE_PARENT: return "SINGLE_PARENT";
    case HouseholdType::CHILDREN_ABOVE_THE_AGE_OF_4: return "CHILDREN_ABOVE_THE_AGE_OF_4";
    case HouseholdType::AT_LEAST_3_MEMBERS: return "AT_LEAST_3_MEMBERS";
    case HouseholdType::SMOKING_MEMBERS: return "SMOKING_MEMBERS";
    case HouseholdType::LIMITED_EDUCATION_ATTAINMENT: return "LIMITED_EDUCATION_ATTAINMENT";
    case HouseholdType::OLDER_ADULTS_OVER_70_YEARS_OLD: return "OLDER_ADULTS_OVER_70_YEARS_OLD";
    case HouseholdType::A_HISTORY_OF_MENTAL_HEALTH_ISSUES: return "A_HISTORY_OF_MENTAL_HEALTH_ISSUES";
    case HouseholdType::DISABLED_MEMBERS: return "DISABLED_MEMBERS";
    case HouseholdType::HIGH_EDUCATION_ATTAINMENT: return "HIGH_EDUCATION_ATTAINMENT";
    case HouseholdType::MEMBERS_WITH_FIRE_INVOLVING_OCCUPATIONS_FOOD_PREPARATION_CONSTRUCTION_EXTRACTION_FARMING_FISHING_FORESTRY: return "MEMBERS_WITH_FIRE_INVOLVING_OCCUPATIONS_FOOD_PREPARATION_CONSTRUCTION_EXTRACTION_FARMING_FISHING_FORESTRY";
    case HouseholdType::BINGE_DRINKING_HABITS: return "BINGE_DRINKING_HABITS";
    case HouseholdType::MEMBERS_WITH_SLEEP_DEPRIVATION_PRONE_OCCUPATIONS_TRANSPORTATION_HEALTH_CARE_MANUFACTURING_SAFETY_BUSINESS_MANAGEMENT: return "MEMBERS_WITH_SLEEP_DEPRIVATION_PRONE_OCCUPATIONS_TRANSPORTATION_HEALTH_CARE_MANUFACTURING_SAFETY_BUSINESS_MANAGEMENT";
    case HouseholdType::TWO_MEMBERS_OR_LESS: return "TWO_MEMBERS_OR_LESS";
    default: return "";
  }
}

enum class AreaType : uint32_t {
  RESIDENT_OWNED_PROPERTIES = 1,
  LOW_ETHNIC_DIVERSITY = 2,
  SEMI_RURAL_TO_RURAL_CHARACTERISTICS = 4,
  A_HIGHER_NUMBER_OF_STRUCTURES_BUILT_BEFORE_1970 = 8,
  HIGH_UNEMPLOYMENT_RATES = 16,
  GROUP_QUARTER_FACILITIES = 32,
  OVERCROWDED_RESIDENCES = 64,
  RENTAL_PROPERTIES = 128,
  SEMI_URBAN_TO_URBAN_CHARACTERISTICS = 256,
  NONE = 0,
  ANY = 511
};
FLATBUFFERS_DEFINE_BITMASK_OPERATORS(AreaType, uint32_t)

inline const AreaType (&EnumValuesAreaType())[9] {
  static const AreaType values[] = {
    AreaType::RESIDENT_OWNED_PROPERTIES,
    AreaType::LOW_ETHNIC_DIVERSITY,
    AreaType::SEMI_RURAL_TO_RURAL_CHARACTERISTICS,
    AreaType::A_HIGHER_NUMBER_OF_STRUCTURES_BUILT_BEFORE_1970,
    AreaType::HIGH_UNEMPLOYMENT_RATES,
    AreaType::GROUP_QUARTER_FACILITIES,
    AreaType::OVERCROWDED_RESIDENCES,
    AreaType::RENTAL_PROPERTIES,
    AreaType::SEMI_URBAN_TO_URBAN_CHARACTERISTICS
  };
  return values;
}

inline const char *EnumNameAreaType(AreaType e) {
  switch (e) {
    case AreaType::RESIDENT_OWNED_PROPERTIES: return "RESIDENT_OWNED_PROPERTIES";
    case AreaType::LOW_ETHNIC_DIVERSITY: return "LOW_ETHNIC_DIVERSITY";
    case AreaType::SEMI_RURAL_TO_RURAL_CHARACTERISTICS: return "SEMI_RURAL_TO_RURAL_CHARACTERISTICS";
    case AreaType::A_HIGHER_NUMBER_OF_STRUCTURES_BUILT_BEFORE_1970: return "A_HIGHER_NUMBER_OF_STRUCTURES_BUILT_BEFORE_1970";
    case AreaType::HIGH_UNEMPLOYMENT_RATES: return "HIGH_UNEMPLOYMENT_RATES";
    case AreaType::GROUP_QUARTER_FACILITIES: return "GROUP_QUARTER_FACILITIES";
    case AreaType::OVERCROWDED_RESIDENCES: return "OVERCROWDED_RESIDENCES";
    case AreaType::RENTAL_PROPERTIES: return "RENTAL_PROPERTIES";
    case AreaType::SEMI_URBAN_TO_URBAN_CHARACTERISTICS: return "SEMI_URBAN_TO_URBAN_CHARACTERISTICS";
    default: return "";
  }
}

enum class SeasonType : uint8_t {
  COLD = 0,
  WARM = 1,
  ALL_YEAR = 2,
  MIN = COLD,
  MAX = ALL_YEAR
};

inline const SeasonType (&EnumValuesSeasonType())[3] {
  static const SeasonType values[] = {
    SeasonType::COLD,
    SeasonType::WARM,
    SeasonType::ALL_YEAR
  };
  return values;
}

inline const char * const *EnumNamesSeasonType() {
  static const char * const names[4] = {
    "COLD",
    "WARM",
    "ALL_YEAR",
    nullptr
  };
  return names;
}

inline const char *EnumNameSeasonType(SeasonType e) {
  if (::flatbuffers::IsOutRange(e, SeasonType::COLD, SeasonType::ALL_YEAR)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesSeasonType()[index];
}

#endif  // FLATBUFFERS_GENERATED_SFMD_H_
