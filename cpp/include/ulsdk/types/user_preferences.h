// Copyright (c), CommunityLogiq Software
// 
// THIS FILE IS AUTOGENERATED, DO NOT EDIT

#pragma once

#include <cstdint>
#include <memory>
#include <optional>
#include <variant>
#include <vector>

#include "flatbuffers/flatbuffers.h"
#include "ulsdk/types/Schema.h"
#include "ulsdk/types/api.h"
#include "ulsdk/types/entity.h"
#include "ulsdk/types/fun.h"
#include "ulsdk/types/graph.h"
#include "ulsdk/types/id.h"
#include "ulsdk/types/query.h"
#include "ulsdk/types/usecase.h"
#include "ulsdk/types/value.h"
#include "ulsdk/types/generated/user_preferences_generated.h"

namespace ul {
namespace types {

struct UserPreferences;

using ::Units;
struct UserPreferences {
    std::optional<Point> center_;
    std::optional<ObjectId> defaultAreaReportTemplate_;
    std::optional<ObjectId> homepage_usecase_id_;
    std::optional<std::string> timezone_;
    Units units_;
    float zoom_;

    UserPreferences();
    UserPreferences(const ::UserPreferences *root);
    UserPreferences(const std::vector<uint8_t> &bytes);
};

::flatbuffers::Offset<::UserPreferences>
serialize_to(::flatbuffers::FlatBufferBuilder &builder, const UserPreferences &);


std::vector<uint8_t>
to_bytes(const UserPreferences &o);


} // namespace types
} // namespace ul
