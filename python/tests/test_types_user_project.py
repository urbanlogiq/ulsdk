# Copyright (c), CommunityLogiq Software
# 
# THIS FILE IS AUTOGENERATED, DO NOT EDIT

from ..types.user_project import *

def test_category_filter():
    _t0 = CategoryFilter.make_default()
    _b = _t0.to_bytes()
    _t1 = CategoryFilter.from_bytes(_b)
    assert _t0 == _t1
def test_column_group():
    _t0 = ColumnGroup.make_default()
    _b = _t0.to_bytes()
    _t1 = ColumnGroup.from_bytes(_b)
    assert _t0 == _t1
def test_data_state_geometry_source():
    _t0 = DataStateGeometrySource.make_default()
    _b = _t0.to_bytes()
    _t1 = DataStateGeometrySource.from_bytes(_b)
    assert _t0 == _t1
def test_deprecated_data_state_join():
    _t0 = DeprecatedDataStateJoin.make_default()
    _b = _t0.to_bytes()
    _t1 = DeprecatedDataStateJoin.from_bytes(_b)
    assert _t0 == _t1
def test_field_filter():
    _t0 = FieldFilter.make_default()
    _b = _t0.to_bytes()
    _t1 = FieldFilter.from_bytes(_b)
    assert _t0 == _t1
def test_join_stack_entry():
    _t0 = JoinStackEntry.make_default()
    _b = _t0.to_bytes()
    _t1 = JoinStackEntry.from_bytes(_b)
    assert _t0 == _t1
def test_range_filter():
    _t0 = RangeFilter.make_default()
    _b = _t0.to_bytes()
    _t1 = RangeFilter.from_bytes(_b)
    assert _t0 == _t1
def test_raw_geometry_source():
    _t0 = RawGeometrySource.make_default()
    _b = _t0.to_bytes()
    _t1 = RawGeometrySource.from_bytes(_b)
    assert _t0 == _t1
def test_raw_geometry_source_geom():
    _t0 = RawGeometrySourceGeom.make_default()
    _b = _t0.to_bytes()
    _t1 = RawGeometrySourceGeom.from_bytes(_b)
    assert _t0 == _t1
def test_relationship_range_filter():
    _t0 = RelationshipRangeFilter.make_default()
    _b = _t0.to_bytes()
    _t1 = RelationshipRangeFilter.from_bytes(_b)
    assert _t0 == _t1
def test_stackable_data_state_join():
    _t0 = StackableDataStateJoin.make_default()
    _b = _t0.to_bytes()
    _t1 = StackableDataStateJoin.from_bytes(_b)
    assert _t0 == _t1
def test_user_layer():
    _t0 = UserLayer.make_default()
    _b = _t0.to_bytes()
    _t1 = UserLayer.from_bytes(_b)
    assert _t0 == _t1
def test_user_layer_data_state():
    _t0 = UserLayerDataState.make_default()
    _b = _t0.to_bytes()
    _t1 = UserLayerDataState.from_bytes(_b)
    assert _t0 == _t1
def test_user_project():
    _t0 = UserProject.make_default()
    _b = _t0.to_bytes()
    _t1 = UserProject.from_bytes(_b)
    assert _t0 == _t1