# Copyright (c), CommunityLogiq Software
# 
# THIS FILE IS AUTOGENERATED, DO NOT EDIT

from ..types.fs import *

def test_attr():
    _t0 = Attr.make_default()
    _b = _t0.to_bytes()
    _t1 = Attr.from_bytes(_b)
    assert _t0 == _t1
def test_chunk():
    _t0 = Chunk.make_default()
    _b = _t0.to_bytes()
    _t1 = Chunk.from_bytes(_b)
    assert _t0 == _t1
def test_directory():
    _t0 = Directory.make_default()
    _b = _t0.to_bytes()
    _t1 = Directory.from_bytes(_b)
    assert _t0 == _t1
def test_directory_entry():
    _t0 = DirectoryEntry.make_default()
    _b = _t0.to_bytes()
    _t1 = DirectoryEntry.from_bytes(_b)
    assert _t0 == _t1
def test_directory_list():
    _t0 = DirectoryList.make_default()
    _b = _t0.to_bytes()
    _t1 = DirectoryList.from_bytes(_b)
    assert _t0 == _t1
def test_file():
    _t0 = File.make_default()
    _b = _t0.to_bytes()
    _t1 = File.from_bytes(_b)
    assert _t0 == _t1
def test_list_directory():
    _t0 = ListDirectory.make_default()
    _b = _t0.to_bytes()
    _t1 = ListDirectory.from_bytes(_b)
    assert _t0 == _t1
def test_list_file():
    _t0 = ListFile.make_default()
    _b = _t0.to_bytes()
    _t1 = ListFile.from_bytes(_b)
    assert _t0 == _t1
def test_list_object():
    _t0 = ListObject.make_default()
    _b = _t0.to_bytes()
    _t1 = ListObject.from_bytes(_b)
    assert _t0 == _t1
def test_list_slot():
    _t0 = ListSlot.make_default()
    _b = _t0.to_bytes()
    _t1 = ListSlot.from_bytes(_b)
    assert _t0 == _t1
def test_move_request():
    _t0 = MoveRequest.make_default()
    _b = _t0.to_bytes()
    _t1 = MoveRequest.from_bytes(_b)
    assert _t0 == _t1
def test_new_link():
    _t0 = NewLink.make_default()
    _b = _t0.to_bytes()
    _t1 = NewLink.from_bytes(_b)
    assert _t0 == _t1
def test_object_ref():
    _t0 = ObjectRef.make_default()
    _b = _t0.to_bytes()
    _t1 = ObjectRef.from_bytes(_b)
    assert _t0 == _t1
def test_slot():
    _t0 = Slot.make_default()
    _b = _t0.to_bytes()
    _t1 = Slot.from_bytes(_b)
    assert _t0 == _t1
def test_top_level_directory():
    _t0 = TopLevelDirectory.make_default()
    _b = _t0.to_bytes()
    _t1 = TopLevelDirectory.from_bytes(_b)
    assert _t0 == _t1