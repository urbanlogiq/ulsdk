# Copyright (c), CommunityLogiq Software
# 
# THIS FILE IS AUTOGENERATED, DO NOT EDIT

from ..types.Schema import *

def test_binary():
    _t0 = Binary.make_default()
    _b = _t0.to_bytes()
    _t1 = Binary.from_bytes(_b)
    assert _t0 == _t1
def test_bool():
    _t0 = Bool.make_default()
    _b = _t0.to_bytes()
    _t1 = Bool.from_bytes(_b)
    assert _t0 == _t1
def test_date():
    _t0 = Date.make_default()
    _b = _t0.to_bytes()
    _t1 = Date.from_bytes(_b)
    assert _t0 == _t1
def test_decimal():
    _t0 = Decimal.make_default()
    _b = _t0.to_bytes()
    _t1 = Decimal.from_bytes(_b)
    assert _t0 == _t1
def test_dictionary_encoding():
    _t0 = DictionaryEncoding.make_default()
    _b = _t0.to_bytes()
    _t1 = DictionaryEncoding.from_bytes(_b)
    assert _t0 == _t1
def test_duration():
    _t0 = Duration.make_default()
    _b = _t0.to_bytes()
    _t1 = Duration.from_bytes(_b)
    assert _t0 == _t1
def test_field():
    _t0 = Field.make_default()
    _b = _t0.to_bytes()
    _t1 = Field.from_bytes(_b)
    assert _t0 == _t1
def test_fixed_size_binary():
    _t0 = FixedSizeBinary.make_default()
    _b = _t0.to_bytes()
    _t1 = FixedSizeBinary.from_bytes(_b)
    assert _t0 == _t1
def test_fixed_size_list():
    _t0 = FixedSizeList.make_default()
    _b = _t0.to_bytes()
    _t1 = FixedSizeList.from_bytes(_b)
    assert _t0 == _t1
def test_floating_point():
    _t0 = FloatingPoint.make_default()
    _b = _t0.to_bytes()
    _t1 = FloatingPoint.from_bytes(_b)
    assert _t0 == _t1
def test_int():
    _t0 = Int.make_default()
    _b = _t0.to_bytes()
    _t1 = Int.from_bytes(_b)
    assert _t0 == _t1
def test_interval():
    _t0 = Interval.make_default()
    _b = _t0.to_bytes()
    _t1 = Interval.from_bytes(_b)
    assert _t0 == _t1
def test_key_value():
    _t0 = KeyValue.make_default()
    _b = _t0.to_bytes()
    _t1 = KeyValue.from_bytes(_b)
    assert _t0 == _t1
def test_large_binary():
    _t0 = LargeBinary.make_default()
    _b = _t0.to_bytes()
    _t1 = LargeBinary.from_bytes(_b)
    assert _t0 == _t1
def test_large_list():
    _t0 = LargeList.make_default()
    _b = _t0.to_bytes()
    _t1 = LargeList.from_bytes(_b)
    assert _t0 == _t1
def test_large_utf_8():
    _t0 = LargeUtf8.make_default()
    _b = _t0.to_bytes()
    _t1 = LargeUtf8.from_bytes(_b)
    assert _t0 == _t1
def test_list():
    _t0 = List_.make_default()
    _b = _t0.to_bytes()
    _t1 = List_.from_bytes(_b)
    assert _t0 == _t1
def test_map():
    _t0 = Map.make_default()
    _b = _t0.to_bytes()
    _t1 = Map.from_bytes(_b)
    assert _t0 == _t1
def test_null():
    _t0 = Null.make_default()
    _b = _t0.to_bytes()
    _t1 = Null.from_bytes(_b)
    assert _t0 == _t1
def test_schema():
    _t0 = Schema.make_default()
    _b = _t0.to_bytes()
    _t1 = Schema.from_bytes(_b)
    assert _t0 == _t1
def test_struct():
    _t0 = Struct_.make_default()
    _b = _t0.to_bytes()
    _t1 = Struct_.from_bytes(_b)
    assert _t0 == _t1
def test_time():
    _t0 = Time.make_default()
    _b = _t0.to_bytes()
    _t1 = Time.from_bytes(_b)
    assert _t0 == _t1
def test_timestamp():
    _t0 = Timestamp.make_default()
    _b = _t0.to_bytes()
    _t1 = Timestamp.from_bytes(_b)
    assert _t0 == _t1
def test_union():
    _t0 = Union_.make_default()
    _b = _t0.to_bytes()
    _t1 = Union_.from_bytes(_b)
    assert _t0 == _t1
def test_utf_8():
    _t0 = Utf8.make_default()
    _b = _t0.to_bytes()
    _t1 = Utf8.from_bytes(_b)
    assert _t0 == _t1