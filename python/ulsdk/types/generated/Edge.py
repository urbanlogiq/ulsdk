# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
from typing import Any
np = import_numpy()

class Edge(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset: int = 0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Edge()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEdge(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Edge
    def Init(self, buf: bytes, pos: int):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Edge
    def From_(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # Edge
    def To(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def EdgeStart(builder: flatbuffers.Builder):
    builder.StartObject(2)

def Start(builder: flatbuffers.Builder):
    EdgeStart(builder)

def EdgeAddFrom_(builder: flatbuffers.Builder, from_: int):
    builder.PrependUint32Slot(0, from_, 0)

def AddFrom_(builder: flatbuffers.Builder, from_: int):
    EdgeAddFrom_(builder, from_)

def EdgeAddTo(builder: flatbuffers.Builder, to: int):
    builder.PrependUint32Slot(1, to, 0)

def AddTo(builder: flatbuffers.Builder, to: int):
    EdgeAddTo(builder, to)

def EdgeEnd(builder: flatbuffers.Builder) -> int:
    return builder.EndObject()

def End(builder: flatbuffers.Builder) -> int:
    return EdgeEnd(builder)
