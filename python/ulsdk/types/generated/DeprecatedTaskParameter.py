# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
from typing import Any
from .ObjectId import ObjectId
from typing import Optional
np = import_numpy()

class DeprecatedTaskParameter(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset: int = 0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DeprecatedTaskParameter()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDeprecatedTaskParameter(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # DeprecatedTaskParameter
    def Init(self, buf: bytes, pos: int):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DeprecatedTaskParameter
    def Key(self) -> Optional[bytes]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # DeprecatedTaskParameter
    def Value(self, j: int):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # DeprecatedTaskParameter
    def ValueAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint8Flags, o)
        return 0

    # DeprecatedTaskParameter
    def ValueLength(self) -> int:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # DeprecatedTaskParameter
    def ValueIsNone(self) -> bool:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # DeprecatedTaskParameter
    def Obj(self) -> Optional[ObjectId]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = ObjectId()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DeprecatedTaskParameter
    def Flags(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def DeprecatedTaskParameterStart(builder: flatbuffers.Builder):
    builder.StartObject(4)

def Start(builder: flatbuffers.Builder):
    DeprecatedTaskParameterStart(builder)

def DeprecatedTaskParameterAddKey(builder: flatbuffers.Builder, key: int):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)

def AddKey(builder: flatbuffers.Builder, key: int):
    DeprecatedTaskParameterAddKey(builder, key)

def DeprecatedTaskParameterAddValue(builder: flatbuffers.Builder, value: int):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(value), 0)

def AddValue(builder: flatbuffers.Builder, value: int):
    DeprecatedTaskParameterAddValue(builder, value)

def DeprecatedTaskParameterStartValueVector(builder, numElems: int) -> int:
    return builder.StartVector(1, numElems, 1)

def StartValueVector(builder, numElems: int) -> int:
    return DeprecatedTaskParameterStartValueVector(builder, numElems)

def DeprecatedTaskParameterAddObj(builder: flatbuffers.Builder, obj: int):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(obj), 0)

def AddObj(builder: flatbuffers.Builder, obj: int):
    DeprecatedTaskParameterAddObj(builder, obj)

def DeprecatedTaskParameterAddFlags(builder: flatbuffers.Builder, flags: int):
    builder.PrependInt64Slot(3, flags, 0)

def AddFlags(builder: flatbuffers.Builder, flags: int):
    DeprecatedTaskParameterAddFlags(builder, flags)

def DeprecatedTaskParameterEnd(builder: flatbuffers.Builder) -> int:
    return builder.EndObject()

def End(builder: flatbuffers.Builder) -> int:
    return DeprecatedTaskParameterEnd(builder)
