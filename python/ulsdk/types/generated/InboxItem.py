# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
from typing import Any
from .ObjectId import ObjectId
from typing import Optional
np = import_numpy()

class InboxItem(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset: int = 0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = InboxItem()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsInboxItem(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # InboxItem
    def Init(self, buf: bytes, pos: int):
        self._tab = flatbuffers.table.Table(buf, pos)

    # InboxItem
    def Notification(self) -> Optional[ObjectId]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = ObjectId()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # InboxItem
    def Status(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # InboxItem
    def Time(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

def InboxItemStart(builder: flatbuffers.Builder):
    builder.StartObject(3)

def Start(builder: flatbuffers.Builder):
    InboxItemStart(builder)

def InboxItemAddNotification(builder: flatbuffers.Builder, notification: int):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(notification), 0)

def AddNotification(builder: flatbuffers.Builder, notification: int):
    InboxItemAddNotification(builder, notification)

def InboxItemAddStatus(builder: flatbuffers.Builder, status: int):
    builder.PrependUint8Slot(1, status, 0)

def AddStatus(builder: flatbuffers.Builder, status: int):
    InboxItemAddStatus(builder, status)

def InboxItemAddTime(builder: flatbuffers.Builder, time: int):
    builder.PrependUint64Slot(2, time, 0)

def AddTime(builder: flatbuffers.Builder, time: int):
    InboxItemAddTime(builder, time)

def InboxItemEnd(builder: flatbuffers.Builder) -> int:
    return builder.EndObject()

def End(builder: flatbuffers.Builder) -> int:
    return InboxItemEnd(builder)
