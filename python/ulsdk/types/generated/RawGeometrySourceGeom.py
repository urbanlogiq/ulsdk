# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
from typing import Any
from flatbuffers.table import Table
from typing import Optional
np = import_numpy()

class RawGeometrySourceGeom(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset: int = 0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = RawGeometrySourceGeom()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRawGeometrySourceGeom(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # RawGeometrySourceGeom
    def Init(self, buf: bytes, pos: int):
        self._tab = flatbuffers.table.Table(buf, pos)

    # RawGeometrySourceGeom
    def GeomType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # RawGeometrySourceGeom
    def Geom(self) -> Optional[flatbuffers.table.Table]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def RawGeometrySourceGeomStart(builder: flatbuffers.Builder):
    builder.StartObject(2)

def Start(builder: flatbuffers.Builder):
    RawGeometrySourceGeomStart(builder)

def RawGeometrySourceGeomAddGeomType(builder: flatbuffers.Builder, geomType: int):
    builder.PrependUint8Slot(0, geomType, 0)

def AddGeomType(builder: flatbuffers.Builder, geomType: int):
    RawGeometrySourceGeomAddGeomType(builder, geomType)

def RawGeometrySourceGeomAddGeom(builder: flatbuffers.Builder, geom: int):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(geom), 0)

def AddGeom(builder: flatbuffers.Builder, geom: int):
    RawGeometrySourceGeomAddGeom(builder, geom)

def RawGeometrySourceGeomEnd(builder: flatbuffers.Builder) -> int:
    return builder.EndObject()

def End(builder: flatbuffers.Builder) -> int:
    return RawGeometrySourceGeomEnd(builder)
