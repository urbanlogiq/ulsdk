# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
from typing import Any
from .DeprecatedDataStateJoin import DeprecatedDataStateJoin
from .StackableDataStateJoin import StackableDataStateJoin
from .UserLayerDataState import UserLayerDataState
from typing import Optional
np = import_numpy()

class UserLayer(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset: int = 0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserLayer()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserLayer(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserLayer
    def Init(self, buf: bytes, pos: int):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserLayer
    def Name(self) -> Optional[bytes]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserLayer
    def DataStates(self, j: int) -> Optional[UserLayerDataState]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = UserLayerDataState()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # UserLayer
    def DataStatesLength(self) -> int:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserLayer
    def DataStatesIsNone(self) -> bool:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # UserLayer
    def DeprecatedDataJoinsDoNotUse(self, j: int) -> Optional[DeprecatedDataStateJoin]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = DeprecatedDataStateJoin()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # UserLayer
    def DeprecatedDataJoinsDoNotUseLength(self) -> int:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserLayer
    def DeprecatedDataJoinsDoNotUseIsNone(self) -> bool:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # UserLayer
    def Visible(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return True

    # UserLayer
    def Joins(self, j: int) -> Optional[StackableDataStateJoin]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = StackableDataStateJoin()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # UserLayer
    def JoinsLength(self) -> int:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserLayer
    def JoinsIsNone(self) -> bool:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

def UserLayerStart(builder: flatbuffers.Builder):
    builder.StartObject(5)

def Start(builder: flatbuffers.Builder):
    UserLayerStart(builder)

def UserLayerAddName(builder: flatbuffers.Builder, name: int):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder: flatbuffers.Builder, name: int):
    UserLayerAddName(builder, name)

def UserLayerAddDataStates(builder: flatbuffers.Builder, dataStates: int):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(dataStates), 0)

def AddDataStates(builder: flatbuffers.Builder, dataStates: int):
    UserLayerAddDataStates(builder, dataStates)

def UserLayerStartDataStatesVector(builder, numElems: int) -> int:
    return builder.StartVector(4, numElems, 4)

def StartDataStatesVector(builder, numElems: int) -> int:
    return UserLayerStartDataStatesVector(builder, numElems)

def UserLayerAddDeprecatedDataJoinsDoNotUse(builder: flatbuffers.Builder, deprecatedDataJoinsDoNotUse: int):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(deprecatedDataJoinsDoNotUse), 0)

def AddDeprecatedDataJoinsDoNotUse(builder: flatbuffers.Builder, deprecatedDataJoinsDoNotUse: int):
    UserLayerAddDeprecatedDataJoinsDoNotUse(builder, deprecatedDataJoinsDoNotUse)

def UserLayerStartDeprecatedDataJoinsDoNotUseVector(builder, numElems: int) -> int:
    return builder.StartVector(4, numElems, 4)

def StartDeprecatedDataJoinsDoNotUseVector(builder, numElems: int) -> int:
    return UserLayerStartDeprecatedDataJoinsDoNotUseVector(builder, numElems)

def UserLayerAddVisible(builder: flatbuffers.Builder, visible: bool):
    builder.PrependBoolSlot(3, visible, 1)

def AddVisible(builder: flatbuffers.Builder, visible: bool):
    UserLayerAddVisible(builder, visible)

def UserLayerAddJoins(builder: flatbuffers.Builder, joins: int):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(joins), 0)

def AddJoins(builder: flatbuffers.Builder, joins: int):
    UserLayerAddJoins(builder, joins)

def UserLayerStartJoinsVector(builder, numElems: int) -> int:
    return builder.StartVector(4, numElems, 4)

def StartJoinsVector(builder, numElems: int) -> int:
    return UserLayerStartJoinsVector(builder, numElems)

def UserLayerEnd(builder: flatbuffers.Builder) -> int:
    return builder.EndObject()

def End(builder: flatbuffers.Builder) -> int:
    return UserLayerEnd(builder)
