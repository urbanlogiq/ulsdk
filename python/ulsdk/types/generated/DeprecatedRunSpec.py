# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
from typing import Any
from .DeprecatedTaskParameter import DeprecatedTaskParameter
from .ObjectId import ObjectId
from .ParamIndices import ParamIndices
from typing import Optional
np = import_numpy()

class DeprecatedRunSpec(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset: int = 0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DeprecatedRunSpec()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDeprecatedRunSpec(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # DeprecatedRunSpec
    def Init(self, buf: bytes, pos: int):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DeprecatedRunSpec
    def Persist(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # DeprecatedRunSpec
    def Schematic(self) -> Optional[ObjectId]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = ObjectId()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DeprecatedRunSpec
    def ParamIndices(self, j: int) -> Optional[ParamIndices]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = ParamIndices()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DeprecatedRunSpec
    def ParamIndicesLength(self) -> int:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # DeprecatedRunSpec
    def ParamIndicesIsNone(self) -> bool:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # DeprecatedRunSpec
    def Params(self, j: int) -> Optional[DeprecatedTaskParameter]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            obj = DeprecatedTaskParameter()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DeprecatedRunSpec
    def ParamsLength(self) -> int:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # DeprecatedRunSpec
    def ParamsIsNone(self) -> bool:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

def DeprecatedRunSpecStart(builder: flatbuffers.Builder):
    builder.StartObject(4)

def Start(builder: flatbuffers.Builder):
    DeprecatedRunSpecStart(builder)

def DeprecatedRunSpecAddPersist(builder: flatbuffers.Builder, persist: bool):
    builder.PrependBoolSlot(0, persist, 0)

def AddPersist(builder: flatbuffers.Builder, persist: bool):
    DeprecatedRunSpecAddPersist(builder, persist)

def DeprecatedRunSpecAddSchematic(builder: flatbuffers.Builder, schematic: int):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(schematic), 0)

def AddSchematic(builder: flatbuffers.Builder, schematic: int):
    DeprecatedRunSpecAddSchematic(builder, schematic)

def DeprecatedRunSpecAddParamIndices(builder: flatbuffers.Builder, paramIndices: int):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(paramIndices), 0)

def AddParamIndices(builder: flatbuffers.Builder, paramIndices: int):
    DeprecatedRunSpecAddParamIndices(builder, paramIndices)

def DeprecatedRunSpecStartParamIndicesVector(builder, numElems: int) -> int:
    return builder.StartVector(4, numElems, 4)

def StartParamIndicesVector(builder, numElems: int) -> int:
    return DeprecatedRunSpecStartParamIndicesVector(builder, numElems)

def DeprecatedRunSpecAddParams(builder: flatbuffers.Builder, params: int):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(params), 0)

def AddParams(builder: flatbuffers.Builder, params: int):
    DeprecatedRunSpecAddParams(builder, params)

def DeprecatedRunSpecStartParamsVector(builder, numElems: int) -> int:
    return builder.StartVector(4, numElems, 4)

def StartParamsVector(builder, numElems: int) -> int:
    return DeprecatedRunSpecStartParamsVector(builder, numElems)

def DeprecatedRunSpecEnd(builder: flatbuffers.Builder) -> int:
    return builder.EndObject()

def End(builder: flatbuffers.Builder) -> int:
    return DeprecatedRunSpecEnd(builder)
