# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
from typing import Any
from typing import Optional
np = import_numpy()

class OrderBy(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset: int = 0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = OrderBy()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsOrderBy(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # OrderBy
    def Init(self, buf: bytes, pos: int):
        self._tab = flatbuffers.table.Table(buf, pos)

    # OrderBy
    def Sort(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # OrderBy
    def Field(self) -> Optional[bytes]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # OrderBy
    def Transform(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int16Flags, o + self._tab.Pos)
        return 0

def OrderByStart(builder: flatbuffers.Builder):
    builder.StartObject(3)

def Start(builder: flatbuffers.Builder):
    OrderByStart(builder)

def OrderByAddSort(builder: flatbuffers.Builder, sort: int):
    builder.PrependUint32Slot(0, sort, 0)

def AddSort(builder: flatbuffers.Builder, sort: int):
    OrderByAddSort(builder, sort)

def OrderByAddField(builder: flatbuffers.Builder, field: int):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(field), 0)

def AddField(builder: flatbuffers.Builder, field: int):
    OrderByAddField(builder, field)

def OrderByAddTransform(builder: flatbuffers.Builder, transform: int):
    builder.PrependInt16Slot(2, transform, 0)

def AddTransform(builder: flatbuffers.Builder, transform: int):
    OrderByAddTransform(builder, transform)

def OrderByEnd(builder: flatbuffers.Builder) -> int:
    return builder.EndObject()

def End(builder: flatbuffers.Builder) -> int:
    return OrderByEnd(builder)
