# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
from typing import Any
from .OrderBy import OrderBy
from typing import Optional
np = import_numpy()

class TableOrderBy(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset: int = 0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TableOrderBy()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTableOrderBy(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TableOrderBy
    def Init(self, buf: bytes, pos: int):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TableOrderBy
    def Source(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # TableOrderBy
    def OrderBy(self) -> Optional[OrderBy]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = OrderBy()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Because the `source` field defaults to 0 when unset, use this field to
    # indicate whether the source should be used. In some cases, such as when
    # you want to order by an column produced by aggregating on the result of
    # a join, the column isn't associated with any table source.
    #
    # In that case, set `use_source` to false and the verbatim string provided
    # in the `field` field of the `OrderBy` structure will be used for the order-by.
    # TableOrderBy
    def UseSource(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return True

def TableOrderByStart(builder: flatbuffers.Builder):
    builder.StartObject(3)

def Start(builder: flatbuffers.Builder):
    TableOrderByStart(builder)

def TableOrderByAddSource(builder: flatbuffers.Builder, source: int):
    builder.PrependUint32Slot(0, source, 0)

def AddSource(builder: flatbuffers.Builder, source: int):
    TableOrderByAddSource(builder, source)

def TableOrderByAddOrderBy(builder: flatbuffers.Builder, orderBy: int):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(orderBy), 0)

def AddOrderBy(builder: flatbuffers.Builder, orderBy: int):
    TableOrderByAddOrderBy(builder, orderBy)

def TableOrderByAddUseSource(builder: flatbuffers.Builder, useSource: bool):
    builder.PrependBoolSlot(2, useSource, 1)

def AddUseSource(builder: flatbuffers.Builder, useSource: bool):
    TableOrderByAddUseSource(builder, useSource)

def TableOrderByEnd(builder: flatbuffers.Builder) -> int:
    return builder.EndObject()

def End(builder: flatbuffers.Builder) -> int:
    return TableOrderByEnd(builder)
