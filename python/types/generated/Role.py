# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
from typing import Any
from .B2cId import B2cId
from typing import Optional
np = import_numpy()

class Role(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset: int = 0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Role()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRole(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Role
    def Init(self, buf: bytes, pos: int):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Role
    def Permission(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # Role
    def Principal(self) -> Optional[B2cId]:
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            obj = B2cId()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def RoleStart(builder: flatbuffers.Builder):
    builder.StartObject(2)

def Start(builder: flatbuffers.Builder):
    RoleStart(builder)

def RoleAddPermission(builder: flatbuffers.Builder, permission: int):
    builder.PrependUint32Slot(0, permission, 0)

def AddPermission(builder: flatbuffers.Builder, permission: int):
    RoleAddPermission(builder, permission)

def RoleAddPrincipal(builder: flatbuffers.Builder, principal: int):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(principal), 0)

def AddPrincipal(builder: flatbuffers.Builder, principal: int):
    RoleAddPrincipal(builder, principal)

def RoleEnd(builder: flatbuffers.Builder) -> int:
    return builder.EndObject()

def End(builder: flatbuffers.Builder) -> int:
    return RoleEnd(builder)
